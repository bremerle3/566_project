#pragma vip(950049a6, e9923bdc, 00000000, 000007bd, "Jun 16 2014", "19:41:39")
//  ------------------------------------------------------------------------
//
//                    (C) COPYRIGHT 2003 - 2014 SYNOPSYS, INC.
//                            ALL RIGHTS RESERVED
//
//  This software and the associated documentation are confidential and
//  proprietary to Synopsys, Inc.  Your use or disclosure of this
//  software is subject to the terms and conditions of a written
//  license agreement between you, or your company, and Synopsys, Inc.
//
// The entire notice above must be reproduced on all authorized copies.
//
//  ------------------------------------------------------------------------

// Revision: $Id: //dwh/DW_ocb/DW_apb_i2c/amba_dev/sim/testbench/Syn_I2C_data_generator.vrh#4 $


#ifndef SYNI2CDATAGENERATOR_VRH
#define SYNI2CDATAGENERATOR_VRH

#ifndef SYNI2CDATAGENERATOR_VR
#define SYNI2CDATAGENERATOR_EXTERN extern
#else
#define SYNI2CDATAGENERATOR_EXTERN
#endif

#include<vera_defines.vrh>
#include "Syn_I2C_defines.vrh"

SYNI2CDATAGENERATOR_EXTERN class Syn_I2C_Data_Generator
{
  rand bit[7:0]         data_rand;
  randc bit[6:0]        address1;
  rand bit[7:0]         address2;
  rand bit              bitfield;
  bit                   incremental_type = I2C_FALSE;
  bit                   fixed_type       = I2C_FALSE;
  bit                   random_type      = I2C_FALSE;
  integer               fixed_deviation = 5;
  bit[7:0]              data=8'h0;
  bit[7:0]              gen_addr;
  bit[7:0]              i2c_memory[ ];
  bit                   slavemode; 

#ifdef SYNI2CDATAGENERATOR_VR
  constraint master_tx_7bit_gen
  {  
    bitfield in {0};
    address1 !in {0:7,120:127};
  }

  constraint master_rx_7bit_gen
  {     
   
   address1 !in {0:7,120:127};
    bitfield in {1};
  }     
  
  constraint master_tx_10bit_gen
  {
   
    address1 in {120:123};
    bitfield in {0};
    address2 in {0:255};
  }     
  
  constraint master_rx_10bit_gen
  {
     address1 in {120:123};
    bitfield in {1};
    address2 in {0:255};
 
  }     
  
  constraint general_call_gen
  {
    address1 in {0000000};
    bitfield in {0};
  }     
  
  constraint startbyte_gen
  {
    address1 in {0000000};
    bitfield in {1};
  }     
  
#endif
  function bit[7:0] data_generator(bit[7:0] addr );                  //Generates data and returns
  function bit[7:0] address_generator(string command);               //Generates address and returns
  task new(string mode);
  
}       


#endif /* SYNI2CDATAGENERATOR_VRH */
