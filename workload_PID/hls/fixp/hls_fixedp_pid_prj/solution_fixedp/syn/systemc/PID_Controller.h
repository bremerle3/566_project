// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _PID_Controller_HH_
#define _PID_Controller_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct PID_Controller : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > InitN;
    sc_in< sc_lv<25> > coeff_0_V;
    sc_in< sc_lv<25> > coeff_1_V;
    sc_in< sc_lv<25> > coeff_2_V;
    sc_in< sc_lv<25> > coeff_3_V;
    sc_in< sc_lv<25> > coeff_4_V;
    sc_in< sc_lv<25> > coeff_5_V;
    sc_in< sc_lv<25> > din_0_V;
    sc_in< sc_lv<25> > din_1_V;
    sc_out< sc_lv<25> > dout_0_V;
    sc_out< sc_lv<25> > dout_1_V;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    PID_Controller(sc_module_name name);
    SC_HAS_PROCESS(PID_Controller);

    ~PID_Controller();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<25> > prev_yi_V;
    sc_signal< sc_lv<25> > prev_x2_V;
    sc_signal< sc_lv<25> > prev_x1_V;
    sc_signal< sc_lv<25> > prev_yd_V;
    sc_signal< sc_lv<50> > OP2_V_fu_204_p1;
    sc_signal< sc_lv<50> > OP2_V_reg_392;
    sc_signal< sc_lv<25> > grp_fu_154_p4;
    sc_signal< sc_lv<25> > p_Val2_5_reg_397;
    sc_signal< sc_lv<25> > pid_mult2_V_reg_403;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_65;
    sc_signal< sc_lv<25> > p_Val2_10_fu_277_p2;
    sc_signal< sc_lv<25> > p_Val2_10_reg_409;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_75;
    sc_signal< sc_lv<25> > pid_addsub2_V_fu_288_p2;
    sc_signal< sc_lv<25> > pid_addsub2_V_reg_414;
    sc_signal< sc_lv<25> > tmp_V_fu_352_p3;
    sc_signal< sc_lv<25> > tmp_V_reg_421;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_87;
    sc_signal< sc_lv<1> > tmp_9_fu_359_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_426;
    sc_signal< sc_lv<25> > p_Val2_15_fu_324_p3;
    sc_signal< sc_lv<25> > e_V_1_fu_190_p3;
    sc_signal< sc_lv<25> > dout_1_V_preg;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_116;
    sc_signal< sc_lv<25> > grp_fu_134_p0;
    sc_signal< sc_lv<50> > OP2_V_1_fu_267_p1;
    sc_signal< sc_lv<25> > grp_fu_134_p1;
    sc_signal< sc_lv<50> > OP1_V_fu_199_p1;
    sc_signal< sc_lv<50> > OP1_V_1_fu_209_p1;
    sc_signal< sc_lv<50> > OP1_V_2_fu_262_p1;
    sc_signal< sc_lv<50> > OP1_V_3_fu_331_p1;
    sc_signal< sc_lv<50> > grp_fu_134_p2;
    sc_signal< sc_lv<25> > pid_addsub_V_fu_164_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_170_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_184_p2;
    sc_signal< sc_lv<25> > e_V_fu_176_p3;
    sc_signal< sc_lv<1> > p_Val2_12_fu_230_p0;
    sc_signal< sc_lv<1> > p_Val2_9_fu_238_p0;
    sc_signal< sc_lv<1> > p_Val2_6_fu_246_p0;
    sc_signal< sc_lv<1> > prev_yd_V_load_s_fu_254_p0;
    sc_signal< sc_lv<25> > prev_yd_V_load_s_fu_254_p3;
    sc_signal< sc_lv<25> > p_Val2_6_fu_246_p3;
    sc_signal< sc_lv<25> > p_Val2_7_fu_272_p2;
    sc_signal< sc_lv<25> > p_Val2_12_fu_230_p3;
    sc_signal< sc_lv<25> > tmp_fu_283_p2;
    sc_signal< sc_lv<25> > p_Val2_9_fu_238_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_310_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_320_p2;
    sc_signal< sc_lv<25> > yi_V_fu_314_p3;
    sc_signal< sc_lv<25> > tmp1_fu_336_p2;
    sc_signal< sc_lv<25> > pid_addsub2_V_1_fu_341_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_347_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_27;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_OP1_V_1_fu_209_p1();
    void thread_OP1_V_2_fu_262_p1();
    void thread_OP1_V_3_fu_331_p1();
    void thread_OP1_V_fu_199_p1();
    void thread_OP2_V_1_fu_267_p1();
    void thread_OP2_V_fu_204_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_116();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_65();
    void thread_ap_sig_bdd_75();
    void thread_ap_sig_bdd_87();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_dout_0_V();
    void thread_dout_1_V();
    void thread_e_V_1_fu_190_p3();
    void thread_e_V_fu_176_p3();
    void thread_grp_fu_134_p0();
    void thread_grp_fu_134_p1();
    void thread_grp_fu_134_p2();
    void thread_grp_fu_154_p4();
    void thread_p_Val2_10_fu_277_p2();
    void thread_p_Val2_12_fu_230_p0();
    void thread_p_Val2_12_fu_230_p3();
    void thread_p_Val2_15_fu_324_p3();
    void thread_p_Val2_6_fu_246_p0();
    void thread_p_Val2_6_fu_246_p3();
    void thread_p_Val2_7_fu_272_p2();
    void thread_p_Val2_9_fu_238_p0();
    void thread_p_Val2_9_fu_238_p3();
    void thread_pid_addsub2_V_1_fu_341_p2();
    void thread_pid_addsub2_V_fu_288_p2();
    void thread_pid_addsub_V_fu_164_p2();
    void thread_prev_yd_V_load_s_fu_254_p0();
    void thread_prev_yd_V_load_s_fu_254_p3();
    void thread_tmp1_fu_336_p2();
    void thread_tmp_1_fu_310_p2();
    void thread_tmp_2_fu_320_p2();
    void thread_tmp_4_fu_347_p2();
    void thread_tmp_6_fu_170_p2();
    void thread_tmp_7_fu_184_p2();
    void thread_tmp_9_fu_359_p2();
    void thread_tmp_V_fu_352_p3();
    void thread_tmp_fu_283_p2();
    void thread_yi_V_fu_314_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
